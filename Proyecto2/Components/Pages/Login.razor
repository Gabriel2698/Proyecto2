@page "/Login"
@using Proyecto2.Services
@using Proyecto2.Models
@using Proyecto2.Server.Data
@inject NavigationManager Navigation
@inject ApplicationDbContext _context
@inject UserRoleService UserRoleService
@using Microsoft.EntityFrameworkCore

<h3>Inicio de Sesión</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Nombre:</label>
        <InputText @bind-Value="loginModel.Nombre" class="form-control" />
    </div>

    <div>
        <label>Contraseña:</label>
        <InputText @bind-Value="loginModel.Contraseña" class="form-control" type="password" />
    </div>

    <div>
        <label>Rol:</label>
        <select @bind="loginModel.Rol" class="form-control">
            <option value="Cliente">Cliente</option>
            <option value="Administrador">Administrador</option>
            <option value="Entrenador">Entrenador</option>
        </select>
    </div>

    <button type="submit" class="btn btn-primary mt-2">Iniciar Sesión</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        if (loginModel.Rol == "Administrador")
        {
            var admin = await _context.Adminis
                .FirstOrDefaultAsync(a => a.Nombre == loginModel.Nombre && a.Contraseña == loginModel.Contraseña);
            if (admin != null)
            {
                // Establecer el rol y redirigir
                UserRoleService.SetUserRole("Admin");
                Navigation.NavigateTo("/NavMenuAdmin");
            }
            else
            {
                // Mostrar error de credenciales incorrectas (no hay necesidad de hacer nada si prefieres no mostrar mensaje)
            }
        }
        else if (loginModel.Rol == "Cliente")
        {
            var cliente = await _context.Clientes
                .FirstOrDefaultAsync(c => c.Nombre == loginModel.Nombre && c.Contraseña == loginModel.Contraseña);
            if (cliente != null)
            {
                // Establecer el rol y redirigir
                UserRoleService.SetUserRole("Cliente");
                Navigation.NavigateTo("/NavMenuCliente");
            }
            else
            {
                // Mostrar error de credenciales incorrectas
            }
        }
        else if (loginModel.Rol == "Entrenador")
        {
            var entrenador = await _context.Entrenadores
                .FirstOrDefaultAsync(e => e.Nombre == loginModel.Nombre && e.PuntosFuertes == loginModel.Contraseña);
            if (entrenador != null)
            {
                // Establecer el rol y redirigir
                UserRoleService.SetUserRole("Entrenador");
                Navigation.NavigateTo("/NavMenuEntrenador");
            }
            else
            {
                // Mostrar error de credenciales incorrectas
            }
        }
    }

    public class LoginModel
    {
        public string Nombre { get; set; } = string.Empty;
        public string Contraseña { get; set; } = string.Empty;
        public string Rol { get; set; } = string.Empty;
    }
}